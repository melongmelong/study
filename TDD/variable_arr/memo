가변길이배열 tdd

스펙
초기에 최대 특정 크기를 가지는 배열임.(128)
새로추가된 엘리먼트의 인덱스가 배열의 최대크기가 넘어서면 크기를 더 늘림.(128바운더리로 늘림. ex. 300이면 384. 200이면 256..)
이 외 특성들은 배열과 동일(index기반으로 접근가능)

-cycle1
TC
초기에 최대 특정 크기를 가지는 배열임.
이 크기가 넘어서면 크기를 더 늘림.
이 외 특성들은 배열과 동일(index기반으로 접근가능)
(v)-arr[0] = 1인 경우, arr[0] == 1 이 보장되어야함, 즉 arr[i] = x면, arr[i] == x가 보장.

-cycle2
TC
초기에 최대 특정 크기를 가지는 배열임.
(v)-최초 생성 시, 사이즈를 저장하는 변수에 초기사이즈(128) 맞는 지 테스트필요.
(v)-배열은 초기사이즈(128)만큼 공간 할당되어야함=>테스트방법이 없어보임.
이 크기가 넘어서면 크기를 더 늘림.
이 외 특성들은 배열과 동일(index기반으로 접근가능)
(v)-arr[0] = 1인 경우, arr[0] == 1 이 보장되어야함, 즉 arr[i] = x면, arr[i] == x가 보장.

-cycle3
TC
초기에 최대 특정 크기를 가지는 배열임.
(v)-최초 생성 시, 사이즈를 저장하는 변수에 초기사이즈(128) 맞는 지 테스트필요.
(v)-배열은 초기사이즈(128)만큼 공간 할당되어야함=>테스트방법이 없어보임.

이 크기가 넘어서면 크기를 더 늘림.
(v)-배열에 요소추가시 요소의 인덱스가 현재크기를 넘어서면 크기를 현재 128바운더리만큼 커져야함.
(v)-크기를 늘린 후 arr[i] == x가 보장되는 지 확인

이 외 특성들은 배열과 동일(index기반으로 접근가능)
(v)-arr[0] = 1인 경우, arr[0] == 1 이 보장되어야함, 즉 arr[i] = x면, arr[i] == x가 보장.

-tdd 사이클종료함.
여전히 좀 미숙함.(특정 실패된 TC고치다가 성공했던 다른TC들도 실패할 경우 어떡해야할 지?, 아직 tdd cycle이 완벽히 익숙하지 않음.)
memory free, memory length check와 같이, segfault발생되는... 프래임워크로 힘든 사항들이 있어보임...

